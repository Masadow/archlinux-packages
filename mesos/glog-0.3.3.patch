diff --git a/3rdparty/libprocess/3rdparty/glog-0.3.3.patch b/3rdparty/libprocess/3rdparty/glog-0.3.3.patch
index 76b8c0f..b30ccd8 100644
--- a/3rdparty/libprocess/3rdparty/glog-0.3.3.patch
+++ b/3rdparty/libprocess/3rdparty/glog-0.3.3.patch
@@ -138,3 +138,117 @@ index 0daf308..1136e0d 100644
      return false;
    }
    const char *p = char_class;
+
+diff --git a/configure b/configure
+index 6a77d35..acb36b7 100755
+--- a/configure
++++ b/configure
+@@ -16547,68 +16547,10 @@ fi
+ 
+ fi
+ 
+-# Check if there is google-gflags library installed.
+-SAVE_CFLAGS="$CFLAGS"
+-SAVE_LIBS="$LIBS"
+-
+-# Check whether --with-gflags was given.
+-if test "${with_gflags+set}" = set; then :
+-  withval=$with_gflags; GFLAGS_CFLAGS="-I${with_gflags}/include"
+-  GFLAGS_LIBS="-L${with_gflags}/lib -lgflags"
+-  CFLAGS="$CFLAGS $GFLAGS_CFLAGS"
+-  LIBS="$LIBS $GFLAGS_LIBS"
+-
+-fi
+-
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for main in -lgflags" >&5
+-$as_echo_n "checking for main in -lgflags... " >&6; }
+-if ${ac_cv_lib_gflags_main+:} false; then :
+-  $as_echo_n "(cached) " >&6
+-else
+-  ac_check_lib_save_LIBS=$LIBS
+-LIBS="-lgflags  $LIBS"
+-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+-/* end confdefs.h.  */
+-
+-
+-int
+-main ()
+-{
+-return main ();
+-  ;
+-  return 0;
+-}
+-_ACEOF
+-if ac_fn_cxx_try_link "$LINENO"; then :
+-  ac_cv_lib_gflags_main=yes
+-else
+-  ac_cv_lib_gflags_main=no
+-fi
+-rm -f core conftest.err conftest.$ac_objext \
+-    conftest$ac_exeext conftest.$ac_ext
+-LIBS=$ac_check_lib_save_LIBS
+-fi
+-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_gflags_main" >&5
+-$as_echo "$ac_cv_lib_gflags_main" >&6; }
+-if test "x$ac_cv_lib_gflags_main" = xyes; then :
+-  ac_cv_have_libgflags=1
+-else
+-  ac_cv_have_libgflags=0
+-fi
+-
+-if test x"$ac_cv_have_libgflags" = x"1"; then
+-
+-$as_echo "#define HAVE_LIB_GFLAGS 1" >>confdefs.h
+-
+-  if test x"$GFLAGS_LIBS" = x""; then
+-    GFLAGS_LIBS="-lgflags"
+-  fi
+-else
+-  GFLAGS_CFLAGS=
+-  GFLAGS_LIBS=
+-fi
+-CFLAGS="$SAVE_CFLAGS"
+-LIBS="$SAVE_LIBS"
++# Disable google-gflags to prevent having them as a dependency.
++ac_cv_have_libgflags=0
++GFLAGS_CFLAGS=
++GFLAGS_LIBS=
+ 
+ # TODO(hamaji): Use official m4 macros provided by testing libraries
+ #               once the m4 macro of Google Mocking becomes ready.
+diff --git a/configure.ac b/configure.ac
+index 8b458fa..692085a 100644
+--- a/configure.ac
++++ b/configure.ac
+@@ -113,27 +113,10 @@ if test x"$acx_pthread_ok" = x"yes"; then
+   AC_CHECK_LIB(pthread, pthread_self)
+ fi
+ 
+-# Check if there is google-gflags library installed.
+-SAVE_CFLAGS="$CFLAGS"
+-SAVE_LIBS="$LIBS"
+-AC_ARG_WITH(gflags, AS_HELP_STRING[--with-gflags=GFLAGS_DIR],
+-  GFLAGS_CFLAGS="-I${with_gflags}/include"
+-  GFLAGS_LIBS="-L${with_gflags}/lib -lgflags"
+-  CFLAGS="$CFLAGS $GFLAGS_CFLAGS"
+-  LIBS="$LIBS $GFLAGS_LIBS"
+-)
+-AC_CHECK_LIB(gflags, main, ac_cv_have_libgflags=1, ac_cv_have_libgflags=0)
+-if test x"$ac_cv_have_libgflags" = x"1"; then
+-  AC_DEFINE(HAVE_LIB_GFLAGS, 1, [define if you have google gflags library])
+-  if test x"$GFLAGS_LIBS" = x""; then
+-    GFLAGS_LIBS="-lgflags"
+-  fi
+-else
+-  GFLAGS_CFLAGS=
+-  GFLAGS_LIBS=
+-fi
+-CFLAGS="$SAVE_CFLAGS"
+-LIBS="$SAVE_LIBS"
++# Disable google-gflags to prevent having them as a dependency.
++ac_cv_have_libgflags=0
++GFLAGS_CFLAGS=
++GFLAGS_LIBS=
+ 
+ # TODO(hamaji): Use official m4 macros provided by testing libraries
+ #               once the m4 macro of Google Mocking becomes ready.
